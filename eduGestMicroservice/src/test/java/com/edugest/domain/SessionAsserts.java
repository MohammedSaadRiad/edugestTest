package com.edugest.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SessionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionAllPropertiesEquals(Session expected, Session actual) {
        assertSessionAutoGeneratedPropertiesEquals(expected, actual);
        assertSessionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionAllUpdatablePropertiesEquals(Session expected, Session actual) {
        assertSessionUpdatableFieldsEquals(expected, actual);
        assertSessionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionAutoGeneratedPropertiesEquals(Session expected, Session actual) {
        assertThat(actual)
            .as("Verify Session auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionUpdatableFieldsEquals(Session expected, Session actual) {
        assertThat(actual)
            .as("Verify Session relevant properties")
            .satisfies(a -> assertThat(a.getDay()).as("check day").isEqualTo(expected.getDay()))
            .satisfies(a -> assertThat(a.getStartTime()).as("check startTime").isEqualTo(expected.getStartTime()))
            .satisfies(a -> assertThat(a.getEndTime()).as("check endTime").isEqualTo(expected.getEndTime()))
            .satisfies(a -> assertThat(a.getSemester()).as("check semester").isEqualTo(expected.getSemester()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionUpdatableRelationshipsEquals(Session expected, Session actual) {
        assertThat(actual)
            .as("Verify Session relationships")
            .satisfies(a -> assertThat(a.getRoom()).as("check room").isEqualTo(expected.getRoom()))
            .satisfies(a -> assertThat(a.getSubject()).as("check subject").isEqualTo(expected.getSubject()))
            .satisfies(a -> assertThat(a.getTeacher()).as("check teacher").isEqualTo(expected.getTeacher()))
            .satisfies(a -> assertThat(a.getSchoolClass()).as("check schoolClass").isEqualTo(expected.getSchoolClass()))
            .satisfies(a -> assertThat(a.getTimetable()).as("check timetable").isEqualTo(expected.getTimetable()));
    }
}
