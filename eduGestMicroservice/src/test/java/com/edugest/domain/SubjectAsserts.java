package com.edugest.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SubjectAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubjectAllPropertiesEquals(Subject expected, Subject actual) {
        assertSubjectAutoGeneratedPropertiesEquals(expected, actual);
        assertSubjectAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubjectAllUpdatablePropertiesEquals(Subject expected, Subject actual) {
        assertSubjectUpdatableFieldsEquals(expected, actual);
        assertSubjectUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubjectAutoGeneratedPropertiesEquals(Subject expected, Subject actual) {
        assertThat(actual)
            .as("Verify Subject auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubjectUpdatableFieldsEquals(Subject expected, Subject actual) {
        assertThat(actual)
            .as("Verify Subject relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubjectUpdatableRelationshipsEquals(Subject expected, Subject actual) {
        assertThat(actual)
            .as("Verify Subject relationships")
            .satisfies(a -> assertThat(a.getSchoolClasses()).as("check schoolClasses").isEqualTo(expected.getSchoolClasses()))
            .satisfies(a -> assertThat(a.getTeachers()).as("check teachers").isEqualTo(expected.getTeachers()));
    }
}
