package com.edugest.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SchoolClassAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSchoolClassAllPropertiesEquals(SchoolClass expected, SchoolClass actual) {
        assertSchoolClassAutoGeneratedPropertiesEquals(expected, actual);
        assertSchoolClassAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSchoolClassAllUpdatablePropertiesEquals(SchoolClass expected, SchoolClass actual) {
        assertSchoolClassUpdatableFieldsEquals(expected, actual);
        assertSchoolClassUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSchoolClassAutoGeneratedPropertiesEquals(SchoolClass expected, SchoolClass actual) {
        assertThat(actual)
            .as("Verify SchoolClass auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSchoolClassUpdatableFieldsEquals(SchoolClass expected, SchoolClass actual) {
        assertThat(actual)
            .as("Verify SchoolClass relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getYear()).as("check year").isEqualTo(expected.getYear()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSchoolClassUpdatableRelationshipsEquals(SchoolClass expected, SchoolClass actual) {
        assertThat(actual)
            .as("Verify SchoolClass relationships")
            .satisfies(a -> assertThat(a.getTimetable()).as("check timetable").isEqualTo(expected.getTimetable()))
            .satisfies(a -> assertThat(a.getTeachers()).as("check teachers").isEqualTo(expected.getTeachers()))
            .satisfies(a -> assertThat(a.getSubjects()).as("check subjects").isEqualTo(expected.getSubjects()));
    }
}
